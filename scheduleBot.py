import datetime
import vk_api
from vk_api.utils import get_random_id
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
import random  # –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª
import schedule  # –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
import time  # —Ä–∞–±–æ—Ç–∞ —Å –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –ª–æ–≥–æ–≤)

from server import Server
from plugins import function, weather
from plugins.config import token, group_id


class ScheduledBot(Server):
    """
    –ë–æ—Ç –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é
    """


    def __init__(self):

        super().__init__(token, group_id, "Mentor.Online")

        self.create_schedule()
        self.today()
        while True:
            schedule.run_pending()

    def today(self):
        status = weather.getStatus()
        speed = weather.getSpeed()
        humidity = weather.getHumidity()
        temperature = weather.getTemp()
        rain = weather.getRain()

        current_datetime = datetime.datetime.now().date()
        time = datetime.datetime.now().strftime("%H:%M") # "%H:%M:%S"
        week = datetime.date(2021, 12, 20).strftime("%V")
        if int(week)%2 != 0:
            week = '–ß–µ—Ç–Ω–∞—è'
        else:
            week = '–ù–µ—á–µ—Ç–Ω–∞—è'

        rasp = function.getNews()

        last_news = '\n'.join(
             [f'{str(title)}\n\n{str(text)}\n\n{str(footer)}\n{str(comments)}' for
             title, text, footer, comments in rasp])
        date = datetime.datetime.now().strftime("%d/%m/%Y")
        message = f'üìÖ –î–∞—Ç–∞: {date}' \
               f'\n‚è∞ –í—Ä–µ–º—è: {time}' \
               f'\n‚åõ –ù–µ–¥–µ–ª—è: {week}'
        if last_news:
            message = message + f'\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ' \
                                f'\nüì∞ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏' \
                                f'\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ' \
                                f'\n{last_news}'
        message = message + f'\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ' \
                            f'\nüåû –ü–æ–≥–æ–¥–∞ –≤ –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä–µ.' \
                            f'\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ' \
                            f'\n‚òÄ –°—Ç–∞—Ç—É—Å: {status}' \
                            f'\nüí® –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {speed}–º/c' \
                            f'\nüíß –í–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞: {humidity}%' \
                            f'\nüå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature}¬∞–°'
        try:
            arrayUser = function.getListUser('news')
            for id in arrayUser:
                self.sender(id, message)
        except:
            pass

    def news(self):
        message = '–í—ã –ø–æ–ª—É—á–∏–ª–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Ç.–∫. –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É.'
        try:
            arrayUser = function.getListUser('news')
            for id in arrayUser:
                self.sender(id, message)
        except:
            pass


    def wish_good_morning(self):
        """
        –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–æ–∂–µ–ª–∞–Ω–∏—è –¥–æ–±—Ä–æ–≥–æ —É—Ç—Ä–∞
        –°–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å default_user_id (–º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è)
        """
        message = '–í—ã –ø–æ–ª—É—á–∏–ª–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Ç.–∫. –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É.'
        try:
            arrayUser = function.getListUser('news')
            for id in arrayUser:
                self.sender(id, message)
        except:
            pass

    def talk_about_lunch(self):
        """
        –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ –æ–±–µ–¥
        –°–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å default_user_id (–º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è)
        """
        pet_name = self.pet_names[random.randint(0, len(self.pet_names) - 1)]
        phrases = [
            "—É–≥–∞–¥–∞–π, —á–µ–º —è —Å–µ–≥–æ–¥–Ω—è –æ–±–µ–¥–∞–ª–∞, {}".format(pet_name),
            "–ø—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞, {}!".format(pet_name),
            "–∞ —á—Ç–æ —Ç—ã –ª—é–±–∏—à—å –∫—É—à–∞—Ç—å, {}?".format(pet_name),
            "–ß—Ç–æ —Ç—ã –µ–ª —Å–µ–≥–æ–¥–Ω—è, {}?".format(pet_name),
        ]
        message = phrases[random.randint(0, len(phrases) - 1)]
        self.send_message(message_text=message)

    def ask_how_the_day_was(self):
        """
        –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –ø—Ä–æ —Ç–æ, –∫–∞–∫ —É —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –∏–¥—É—Ç –¥–µ–ª–∞
        –°–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å default_user_id (–º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è)
        """
        pet_name = self.pet_names[random.randint(0, len(self.pet_names) - 1)]
        phrases = [
            "–∫–∞–∫ —Ç–≤–æ–π –¥–µ–Ω—å –ø—Ä–æ—Ö–æ–¥–∏—Ç, {}?".format(pet_name),
            "—á–µ–º –∑–∞–Ω–∏–º–∞–ª—Å—è —Å–µ–≥–æ–¥–Ω—è, {}?".format(pet_name),
            "–ü—Ä–∏–∑–Ω–∞–≤–∞–π—Å—è, —á—Ç–æ –¥–µ–ª–∞–ª –≤–µ—Å—å –¥–µ–Ω—å, {}?".format(pet_name),
            "—á–µ–≥–æ —É—Å–ø–µ–ª –Ω–∞—Ç–≤–æ—Ä–∏—Ç—å –∑–∞ —Å–µ–≥–æ–¥–Ω—è, {}?".format(pet_name)
        ]
        message = phrases[random.randint(0, len(phrases) - 1)]
        self.send_message(message_text=message)

    def wish_good_night(self):
        """
        –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–æ–∂–µ–ª–∞–Ω–∏—è –Ω–∞ –Ω–æ—á—å
        –°–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å default_user_id (–º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è)
        """
        pet_name = self.pet_names[random.randint(0, len(self.pet_names) - 1)]
        phrases = [
            "–î–æ–±—Ä–æ–π –Ω–æ—á–∏, {}!".format(pet_name),
            "–°–ª–∞–¥–∫–∏—Ö —Å–Ω–æ–≤, {})".format(pet_name),
            "—Å–ø–∏ –∫—Ä–µ–ø–∫–æ, {}".format(pet_name),
            "—Å–ø–æ–∫–Ω–æ–π–Ω–æ –Ω–æ—á–∏ —Ç–µ–±–µ, {}, –∑–∞–≤—Ç—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∏–º".format(pet_name)
        ]
        message = phrases[random.randint(0, len(phrases) - 1)]
        self.send_message(message_text=message)

    def create_schedule(self):
        """
        –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –ø—Ä–æ–º–µ–∂—É—Ç–∫–µ
        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–∞
        –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ schedule: https://schedule.readthedocs.io/en/stable/index.html
        """

        news = "10:00"
        schedule.every().day.at(news).do(self.news)

        # –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –æ–±–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –≤ —Å–ª—É—á–∞–π–Ω—ã–π –º–æ–º–µ–Ω—Ç
        lunch_time = str(random.randint(11, 13)) + ":" + str(random.randint(10, 59))
        schedule.every().day.at(lunch_time).do(self.talk_about_lunch)

        # –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≤–µ—á–µ—Ä–Ω–µ–µ –≤—Ä–µ–º—è –≤ —Å–ª—É—á–∞–π–Ω—ã–π –º–æ–º–µ–Ω—Ç
        evening_time = str(random.randint(18, 20)) + ":" + str(random.randint(10, 59))
        schedule.every().day.at(evening_time).do(self.ask_how_the_day_was)

        # –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–∑–¥–Ω–∏–º –≤–µ—á–µ—Ä–æ–º –≤ —Å–ª—É—á–∞–π–Ω—ã–π –º–æ–º–µ–Ω—Ç
        night_time = str(random.randint(22, 23)) + ":" + str(random.randint(10, 59))
        schedule.every().day.at(night_time).do(self.wish_good_night)

        # –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Ä–æ–≤–Ω–æ –≤ –ø–æ–ª–Ω–æ—á—å
        schedule.every().day.at("00:00").do(self.restart_schedule)

        # –≤—ã–≤–æ–¥ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
        print(f"–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {time.strftime('%d.%m.%Y')}:"
              f"\n{news}\n{lunch_time}\n{evening_time}\n{night_time}\n")

    def restart_schedule(self):
        """
        –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
        """
        schedule.clear()
        self.create_schedule()